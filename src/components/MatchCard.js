import React from 'react';

// –û–±—ä–µ–∫—Ç —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏ –∫–æ–º–∞–Ω–¥ (—ç–º–æ–¥–∑–∏)
export const teamLogos = {
  'Galaxy Guardians': 'üöÄ',
  'Nexus Dominators': '‚ö°',
  'Shadow Assassins': 'ü•∑',
  'Arcane Mages': 'üßô‚Äç‚ôÇÔ∏è',
  'Cyber Dragons': 'üêâ',
  'Void Warriors': 'üõ°Ô∏è',
  'Phoenix Force': 'üî•',
  'Dark Knights': 'üåë',
  // –õ–æ–≥–æ—Ç–∏–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  default: 'üèÜ'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–æ –∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã
export const getTeamLogo = (teamName) => {
  return teamLogos[teamName] || teamLogos.default;
};

const MatchCard = ({ match, onClick }) => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—á–µ—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
  let winner = null;
  if (match.score) {
    const scores = match.score.split(':').map(Number);
    winner = scores[0] > scores[1] ? match.team1 : match.team2;
  }

  return (
    <div
      className="w-full max-w-xs rounded-lg overflow-hidden cursor-pointer transition-all duration-300 match-card hover:translate-y-[-2px]"
      onClick={() => onClick(match)}
      style={{
        background: 'rgba(24, 24, 24, 0.5)',
        backdropFilter: 'blur(8px)',
        border: '1px solid rgba(220, 38, 38, 0.2)',
        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.25)'
      }}
    >
      <div className="px-4 py-3 border-b border-red-800/40"
        style={{
          background: 'linear-gradient(90deg, rgba(185, 28, 28, 0.5) 0%, rgba(127, 29, 29, 0.5) 100%)'
        }}
      >
        <h3 className="text-sm font-medium text-white">–ú–∞—Ç—á #{match.id}</h3>
      </div>
      
      <div className="p-4">
        <div className="flex justify-between items-center mb-4">
          <div className="font-medium text-white flex items-center">
            <span className="team-logo mr-2" style={{ fontSize: '1.2rem' }}>
              {getTeamLogo(match.team1)}
            </span>
            {match.team1}
          </div>
          {match.score && (
            <div className={`w-8 h-8 flex items-center justify-center rounded-md shadow-md ${
              winner === match.team1 ? 'bg-green-600/90' : 'bg-red-800/80'
            }`}>
              <span className="text-sm font-bold text-white">{match.score.split(':')[0]}</span>
            </div>
          )}
        </div>
        
        <div className="flex justify-between items-center">
          <div className="font-medium text-white flex items-center">
            <span className="team-logo mr-2" style={{ fontSize: '1.2rem' }}>
              {getTeamLogo(match.team2)}
            </span>
            {match.team2}
          </div>
          {match.score && (
            <div className={`w-8 h-8 flex items-center justify-center rounded-md shadow-md ${
              winner === match.team2 ? 'bg-green-600/90' : 'bg-red-800/80'
            }`}>
              <span className="text-sm font-bold text-white">{match.score.split(':')[1]}</span>
            </div>
          )}
        </div>
        
        <div className="mt-3 text-xs text-gray-400">{match.date}</div>
      </div>
    </div>
  );
};

export default MatchCard; 